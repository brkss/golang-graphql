// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: recipe_category.sql

package db

import (
	"context"
	"database/sql"
)

const createCategory = `-- name: CreateCategory :one
INSERT INTO recipe_categories 
( id, title, image, active ) 
VALUES ( $1, $2, $3, $4 )
RETURNING id, title, image, active
`

type CreateCategoryParams struct {
	ID     string       `json:"id"`
	Title  string       `json:"title"`
	Image  string       `json:"image"`
	Active sql.NullBool `json:"active"`
}

func (q *Queries) CreateCategory(ctx context.Context, arg CreateCategoryParams) (RecipeCategory, error) {
	row := q.db.QueryRowContext(ctx, createCategory,
		arg.ID,
		arg.Title,
		arg.Image,
		arg.Active,
	)
	var i RecipeCategory
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Image,
		&i.Active,
	)
	return i, err
}

const getCategories = `-- name: GetCategories :one
SELECT id, title, image, active FROM recipe_categories
ORDER BY id
`

func (q *Queries) GetCategories(ctx context.Context) (RecipeCategory, error) {
	row := q.db.QueryRowContext(ctx, getCategories)
	var i RecipeCategory
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Image,
		&i.Active,
	)
	return i, err
}
